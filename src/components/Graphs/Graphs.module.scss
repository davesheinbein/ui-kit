@use '../../styles/Variables.scss' as *;
@use '../../styles/mixins.scss' as *;

// === BASE GRAPH CONTAINER ===
.graphsContainer {
	width: 100%;
	margin: 1.2em 0 0.5em 0;
	display: flex;
	flex-direction: column;
	position: relative;
}

.graphsTitle {
	margin: 0 0 0.5em 0;
	font-size: 1em;
	color: #0ea5e9;
	font-weight: 600;
}

// === CHART TYPE SPECIFIC STYLES ===

// Bar Charts
.barChart {
	.recharts-bar {
		transition: opacity 0.2s ease;
		&:hover {
			opacity: 0.8;
		}
	}
}

.stackedBarChart {
	.recharts-bar {
		transition: all 0.3s ease;
	}
}

.groupedBarChart {
	.recharts-bar {
		transition: all 0.3s ease;
		&:hover {
			filter: brightness(1.1);
		}
	}
}

.horizontalBarChart {
	.recharts-bar {
		transition: opacity 0.2s ease;
		&:hover {
			opacity: 0.8;
		}
	}
}

.horizontalStackedBarChart {
	.recharts-bar {
		transition: all 0.3s ease;
	}
}

// Line Charts
.lineChart {
	.recharts-line {
		transition: stroke-width 0.2s ease;
		&:hover {
			stroke-width: 3;
		}
	}
	.recharts-dot {
		transition: r 0.2s ease;
		&:hover {
			r: 5;
		}
	}
}

.smoothLineChart {
	.recharts-line {
		transition: all 0.3s ease;
		filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
	}
}

.multiLineChart {
	.recharts-line {
		transition: stroke-width 0.2s ease;
		&:hover {
			stroke-width: 3;
			filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.2));
		}
	}
}

.steppedLineChart {
	.recharts-line {
		stroke-dasharray: 5, 5;
		transition: stroke-dasharray 0.3s ease;
		&:hover {
			stroke-dasharray: none;
		}
	}
}

// Area Charts
.areaChart {
	.recharts-area {
		transition: fill-opacity 0.3s ease;
		&:hover {
			fill-opacity: 0.7;
		}
	}
}

.stackedAreaChart {
	.recharts-area {
		transition: all 0.3s ease;
	}
}

.smoothAreaChart {
	.recharts-area {
		filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
		transition: all 0.3s ease;
	}
}

// Pie Charts
.pieChart {
	.recharts-pie-sector {
		transition: all 0.3s ease;
		&:hover {
			transform: scale(1.05);
			filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
		}
	}
}

.doughnutChart {
	.recharts-pie-sector {
		transition: all 0.3s ease;
		&:hover {
			transform: scale(1.02);
			filter: brightness(1.1);
		}
	}
}

.labeledPieChart {
	.recharts-pie-label {
		font-size: 12px;
		font-weight: 600;
		fill: #374151;
	}
	.recharts-pie-sector {
		transition: all 0.3s ease;
		&:hover {
			filter: brightness(1.1);
		}
	}
}

// Specialized Charts
.radarChart {
	.recharts-radar {
		transition: all 0.3s ease;
		&:hover {
			filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.2));
		}
	}
	.recharts-polygon {
		transition: stroke-width 0.2s ease;
		&:hover {
			stroke-width: 2;
		}
	}
}

.scatterChart {
	.recharts-scatter-symbol {
		transition: all 0.2s ease;
		&:hover {
			transform: scale(1.2);
			filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
		}
	}
}

.composedChart {
	.recharts-bar,
	.recharts-line {
		transition: all 0.3s ease;
	}
	.recharts-bar:hover {
		opacity: 0.8;
	}
	.recharts-line:hover {
		stroke-width: 3;
	}
}

.treemapChart {
	.recharts-treemap-depth-1 {
		transition: all 0.3s ease;
		&:hover {
			filter: brightness(1.1);
			stroke-width: 2;
		}
	}
}

.funnelChart {
	.recharts-funnel-sector {
		transition: all 0.3s ease;
		&:hover {
			filter: brightness(1.1);
		}
	}
}

// === ANALYTICS SPECIFIC STYLES ===
.analyticsTrendChart {
	.recharts-line {
		stroke-width: 3;
		filter: drop-shadow(0 2px 4px rgba(37, 99, 235, 0.3));
	}
	.recharts-dot {
		display: none;
	}
}

.analyticsComparisonChart {
	.recharts-bar {
		opacity: 0.8;
		transition: opacity 0.2s ease;
		&:hover {
			opacity: 1;
		}
	}
}

.analyticsDistributionChart {
	.recharts-pie-sector {
		transition: all 0.3s ease;
		&:hover {
			transform: scale(1.02);
		}
	}
}

.analyticsPerformanceChart {
	.recharts-radar {
		fill-opacity: 0.3;
		stroke-width: 2;
	}
	.recharts-polygon {
		stroke-width: 1;
		stroke-dasharray: 3, 3;
	}
}

// === DASHBOARD SPECIFIC STYLES ===
.dashboardSummaryChart {
	.recharts-area {
		fill-opacity: 0.2;
	}
	.recharts-line {
		stroke-width: 2;
	}
}

.dashboardKpiChart {
	.recharts-bar {
		opacity: 0.7;
		border-radius: 2px;
	}
}

.dashboardTrendChart {
	.recharts-line {
		stroke-width: 2;
		stroke-dasharray: 5, 5;
	}
	.recharts-grid line {
		stroke-opacity: 0.3;
	}
}

.dashboardMiniChart {
	.recharts-line {
		stroke-width: 1;
	}
	.recharts-dot {
		display: none;
	}
}

// === STATS SPECIFIC STYLES ===
.statsScoreChart {
	.recharts-area {
		fill-opacity: 0.3;
		transition: fill-opacity 0.3s ease;
		&:hover {
			fill-opacity: 0.5;
		}
	}
	.recharts-line {
		stroke-width: 3;
		filter: drop-shadow(0 2px 6px rgba(37, 99, 235, 0.4));
	}
}

.statsPerformanceChart {
	.recharts-radar {
		fill-opacity: 0.4;
		stroke-width: 2;
		transition: all 0.3s ease;
		&:hover {
			fill-opacity: 0.6;
		}
	}
}

.statsMatchHistoryChart {
	.recharts-bar {
		border-radius: 4px 4px 0 0;
		transition: all 0.2s ease;
		&:hover {
			filter: brightness(1.1);
			transform: translateY(-2px);
		}
	}
}

.statsCategoryChart {
	.recharts-pie-sector {
		transition: all 0.3s ease;
		&:hover {
			transform: scale(1.05);
			filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.2));
		}
	}
	.recharts-pie-label {
		font-size: 11px;
		font-weight: 600;
		fill: #1f2937;
	}
}

.statsTimeSeriesChart {
	.recharts-line {
		stroke-width: 2;
		transition: stroke-width 0.2s ease;
		&:hover {
			stroke-width: 3;
		}
	}
	.recharts-dot {
		r: 2;
		transition: r 0.2s ease;
		&:hover {
			r: 4;
		}
	}
}

// === RESPONSIVE BEHAVIOR ===
@media (max-width: 768px) {
	.graphsContainer {
		margin: 0.8em 0 0.3em 0;
	}

	.graphsTitle {
		font-size: 0.9em;
		margin-bottom: 0.3em;
	}

	// Reduce chart heights on mobile
	.pieChart,
	.doughnutChart,
	.labeledPieChart {
		height: 160px !important;
	}

	.radarChart,
	.composedChart {
		height: 140px !important;
	}
}

// === ACCESSIBILITY ===
.graphsContainer {
	&:focus-within {
		outline: 2px solid $primary-blue;
		outline-offset: 2px;
		border-radius: 4px;
	}
}

// Screen reader only content
.srOnly {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

// === ANIMATION UTILITIES ===
.fadeIn {
	animation: fadeIn 0.5s ease-in-out;
}

.slideUp {
	animation: slideUp 0.6s ease-out;
}

.scaleIn {
	animation: scaleIn 0.4s ease-out;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes slideUp {
	from {
		transform: translateY(20px);
		opacity: 0;
	}
	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes scaleIn {
	from {
		transform: scale(0.9);
		opacity: 0;
	}
	to {
		transform: scale(1);
		opacity: 1;
	}
}
