@use '../../styles/mixins' as *;

// Base chat component with proper containment
.chat {
	@include chat-window;
	@include flex-column;
	gap: 0;
	overflow: hidden; // Prevent content overflow
}

// Position variants - some extend beyond bounds intentionally
.chat--fixed {
	position: fixed;
	z-index: var(--z-modal);
	animation: fadeIn 0.18s;
	// Intentional overflow: Fixed chat windows need to float over content
}

.chat--relative {
	position: relative;
}

.chat--absolute {
	position: absolute;
}

// Chat variants with proper containment
.chat--friend {
	bottom: var(--spacing-8);
	right: 380px;
	@include contained-width(340px, 95vw);
}

.chat--in-match {
	@include card-base;
	background: var(--bg-surface);
	padding: var(--spacing-4);
}

.chat--match {
	@include card-base;
	background: var(--bg-surface);
	padding: var(--spacing-4);
}

.chat--general {
	background: var(--bg-surface-alpha);
	backdrop-filter: blur(8px);
}

// Chat header with containment
.chatHeader {
	@include chat-header;
	overflow: hidden; // Prevent header content overflow
}

.chatAvatar {
	@include flex-center;
	@include contained-size(38px);
	position: relative;
}

.chatTitle {
	@include text-lg;
	@include text-truncate;
	font-weight: 700;
	color: var(--accent-blue-500);
	flex: 1;
	min-width: 0; // Allow text truncation
}

.chatCloseBtn {
	@include interactive-element;
	background: none;
	border: none;
	@include text-xl;
	color: var(--text-tertiary);
	border-radius: var(--radius-sm);
	padding: var(--spacing-1) var(--spacing-3);
	cursor: pointer;

	&:hover {
		background: var(--semantic-warning-100);
		color: var(--semantic-error-500);
	}

	&:focus {
		@include focus-ring;
	}
}

// Chat content with proper scrolling
.chatContent {
	flex: 1;
	@include flex-column(0);
	overflow: hidden; // Prevent content overflow
}

// Chat messages container with contained scrolling
.chatMessages {
	@include chat-messages;
	@include flex-column(var(--spacing-2));
	overflow-y: auto; // Allow scrolling within bounds
	overflow-x: hidden; // Prevent horizontal overflow
	max-height: 300px; // Limit message area height
}

// Message variants with text containment
.chatMessage {
	@include chat-message;
	word-wrap: break-word; // Prevent text overflow
	overflow-wrap: break-word;
}

.chatMessageSelf {
	@include chat-message-self;
	text-align: right;
	@include text-truncate-multiline(3);
}

.chatMessageFriend {
	@include chat-message-friend;
	text-align: left;
	@include text-truncate-multiline(3);
}

.chatMessageSystem {
	@include chat-message-base;
	color: var(--text-tertiary);
	font-style: italic;
	background: var(--bg-muted);
	align-self: center;
	text-align: center;
	@include contained-width(90%);
	@include text-truncate-multiline(2);
}

// Message content with overflow handling
.chatMessageText {
	display: inline;
	word-wrap: break-word;
	overflow-wrap: break-word;
}

.chatMessageTime {
	@include text-xs;
	color: var(--text-tertiary);
	margin-left: var(--spacing-2);
}

// Chat input area with contained layout
.chatInput {
	@include flex-row(var(--spacing-2), center);
	padding: var(--spacing-3) var(--spacing-5);
	border-top: 1px solid var(--border-default);
	background: var(--bg-surface-alpha);
	overflow: hidden; // Prevent input overflow
}

.chatInputField {
	@include input-base;
	flex: 1;
	min-width: 0; // Allow input to shrink
	padding: var(--spacing-2) var(--spacing-3);
	border-radius: var(--radius-full);
	@include text-sm;

	&:focus {
		@include focus-ring(var(--accent-blue-500));
		border-color: var(--accent-blue-500);
	}
}

.chatSendBtn {
	@include button-base;
	@include interactive-element;
	padding: var(--spacing-2) var(--spacing-4);
	background: var(--accent-blue-500);
	color: var(--text-primary-inverse);
	border: none;
	border-radius: var(--radius-full);
	@include text-sm;
	cursor: pointer;
	flex-shrink: 0;

	&:hover {
		background: var(--accent-blue-600);
	}

	&:disabled {
		background: var(--bg-disabled);
		color: var(--text-disabled);
		cursor: not-allowed;
	}

	&:focus {
		@include focus-ring;
	}
}

// VSQuickChatBar styles with containment
.vsQuickChatBar {
	@include flex-row(var(--spacing-2), center, wrap);
	padding: var(--spacing-3);
	background: var(--bg-surface-alpha);
	border-radius: var(--radius-md);
	backdrop-filter: blur(10px);
	overflow: hidden; // Prevent button overflow
}

.vsQuickChatButton {
	@include button-base;
	@include interactive-element;
	background: var(--accent-blue-100);
	border: none;
	border-radius: var(--radius-md);
	padding: var(--spacing-2) var(--spacing-4);
	cursor: pointer;
	font-weight: 600;
	@include text-sm;
	white-space: nowrap;

	&:hover {
		background: var(--accent-blue-500);
		color: var(--text-primary-inverse);
		transform: translateY(-1px);
	}

	&:active {
		transform: translateY(0);
	}

	&:focus {
		@include focus-ring;
	}
}

// Animation keyframes
@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}
