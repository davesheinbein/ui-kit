@use '../../styles/mixins' as *;

.banner {
	@include flex-center;
	@include contained-width(100%, 420px, 260px);
	@include smooth-transition(all);
	padding: var(--spacing-3) var(--spacing-6);
	border-radius: var(--radius-lg);
	@include text-base;
	font-weight: 600;
	color: var(--text-primary);
	position: relative;
	margin: 0 auto;
	overflow: hidden; // Prevent content overflow

	// Default animation
	animation: bannerSlideIn 0.3s ease-out;
}

// Position variants - some extend beyond parent bounds intentionally
.banner--fixed {
	position: fixed;
	z-index: var(--z-modal);
	// Intentional overflow: Fixed banners need to stay visible over content
}

.banner--relative {
	position: relative;
}

.banner--center {
	margin: var(--spacing-5) auto 0 auto;
	text-align: center;
}

.banner--top {
	top: var(--spacing-5);
	left: 50%;
	transform: translateX(-50%);
	// Intentional overflow: Positioned banners need specific placement
}

.banner--bottom {
	bottom: var(--spacing-5);
	left: 50%;
	transform: translateX(-50%);
	// Intentional overflow: Positioned banners need specific placement
}

// Banner style variants
.banner--feedback {
	@include contained-width(100%, 420px);
	margin: var(--spacing-5) auto 0 auto;
	text-align: center;
	background: var(--bg-surface-alpha);
	color: var(--text-primary);
	@include text-base;
	border-radius: var(--radius-md);
	box-shadow: var(--shadow-sm);
	padding: var(--spacing-4) var(--spacing-5);
	@include flex-center;
	backdrop-filter: blur(8px);
}

.banner--notification {
	box-shadow: var(--shadow-sm);
	z-index: var(--z-modal);
}

.banner--toast {
	box-shadow: var(--shadow-md);
	border: 1px solid var(--border-alpha);
	backdrop-filter: blur(10px);
}

.banner--status {
	@include flex-row(var(--spacing-4), center, nowrap);
	justify-content: space-between;
	margin-bottom: var(--spacing-4);
	padding: var(--spacing-2) 0;
	background: transparent;
	border-radius: 0;
}

.banner--global {
	position: fixed;
	top: var(--spacing-5);
	left: 50%;
	transform: translateX(-50%);
	z-index: var(--z-maximum);
	// Intentional overflow: Global banners need maximum visibility
}

// Type variants using design system colors
.banner--burn {
	background: linear-gradient(
		135deg,
		var(--semantic-warning-500),
		var(--semantic-error-500)
	);
	color: var(--text-primary-inverse);
}

.banner--achievement {
	background: linear-gradient(
		135deg,
		var(--accent-yellow-400),
		var(--accent-yellow-500)
	);
	color: var(--text-primary);
}

.banner--system {
	background: linear-gradient(
		135deg,
		var(--accent-blue-500),
		var(--accent-blue-600)
	);
	color: var(--text-primary-inverse);
}

.banner--taunt {
	background: linear-gradient(
		135deg,
		var(--accent-purple-500),
		var(--accent-purple-600)
	);
	color: var(--text-primary-inverse);
}

.banner--success {
	background: linear-gradient(
		135deg,
		var(--semantic-success-500),
		var(--semantic-success-600)
	);
	color: var(--text-primary-inverse);
}

.banner--error {
	background: linear-gradient(
		135deg,
		var(--semantic-error-500),
		var(--semantic-error-600)
	);
	color: var(--text-primary-inverse);
}

.banner--info {
	background: linear-gradient(
		135deg,
		var(--accent-blue-500),
		var(--accent-blue-600)
	);
	color: var(--text-primary-inverse);
}

.banner--warning {
	background: linear-gradient(
		135deg,
		var(--semantic-warning-500),
		var(--semantic-warning-600)
	);
	color: var(--text-primary-inverse);
}

// Close button
.bannerCloseButton {
	@include absolute-position(
		var(--spacing-2),
		var(--spacing-2)
	);
	@include interactive-element;
	background: none;
	border: none;
	@include text-lg;
	line-height: 1;
	color: inherit;
	cursor: pointer;
	padding: var(--spacing-1);
	border-radius: var(--radius-sm);
	opacity: 0.7;

	&:hover {
		opacity: 1;
		background: rgba(255, 255, 255, 0.1);
	}

	&:focus {
		@include focus-ring;
	}
}

// Status bar specific styles
.banner--status {
	.vsStatusAvatar {
		@include contained-size(32px);
		border-radius: 50%;
		object-fit: cover;
	}

	.vsStatusUsername {
		font-weight: 700;
		@include text-truncate;
	}

	.vsStatusGroups {
		margin-left: var(--spacing-2);
	}

	.vsStatusMistakes {
		margin-left: var(--spacing-2);
	}

	.vsStatusTimer {
		font-weight: 700;
		@include text-lg;
	}

	.vsStatusEmoteBtn {
		@include interactive-element;
		margin-left: var(--spacing-2);
		@include text-xl;
		background: none;
		border: none;
		cursor: pointer;

		&:hover {
			transform: scale(1.1);
		}
	}
}

// Hidden state for feedback banners
.banner--feedback.banner--hidden {
	display: none;
}

// Animation keyframes
@keyframes bannerSlideIn {
	from {
		opacity: 0;
		transform: translateY(-20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

// Responsive adjustments
@include mobile {
	.banner {
		@include contained-width(
			100%,
			calc(100vw - var(--spacing-4)),
			200px
		);
		margin-inline: var(--spacing-2);
		padding: var(--spacing-2) var(--spacing-4);
		@include text-sm;
	}

	.banner--feedback {
		@include contained-width(
			100%,
			calc(100vw - var(--spacing-4))
		);
		margin-inline: var(--spacing-2);
	}
}
