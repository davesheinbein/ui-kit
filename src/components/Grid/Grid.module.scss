@use '../../styles/Variables.scss' as *;
@use '../../styles/mixins.scss' as *;

// ===== BASE GRID STYLES =====

.unifiedGrid {
	@include grid-pattern(4, 12px);
	width: 100%;
	margin: 0 auto;

	&.interactive {
		cursor: pointer;
	}

	&.preview {
		pointer-events: none;
	}

	&.locked {
		pointer-events: none;
		user-select: none;
		cursor: not-allowed;
	}
}

// ===== GRID VARIANTS =====

.grid-basic {
	background: #fff;
	border-radius: 16px;
	box-shadow: 0 2px 16px 0 #e3eaff33;
	padding: 12px;
	max-width: 480px;
	min-height: 320px;
}

.grid-game {
	@extend .grid-basic;
}

.grid-preview {
	@extend .grid-basic;
	filter: brightness(1.05);

	.grid-cell {
		background: rgb(
			253.8571428571,
			240.7142857143,
			188.1428571429
		) !important;
		color: #1e293b !important;
		border-color: #fde047 !important;
		box-shadow:
			0 0 0 3px rgba(253, 224, 71, 0.3333333333),
			0 4px 16px 0 rgba(56, 189, 248, 0.3333333333) !important;
		transform: translateY(-2px) scale(1.03) !important;
		z-index: 2;
	}
}

.grid-locked {
	background: #f8fafc;
	border-radius: 16px;
	box-shadow: 0 2px 16px 0 #e3eaff33;
	padding: 12px;
	max-width: 480px;
	min-height: 320px;
	filter: blur(0.5px);
}

.grid-solved {
	background: transparent;
	padding: 0;
	max-width: 600px;
	display: flex;
	flex-wrap: wrap;
	gap: 18px;
	justify-content: center;
	align-items: flex-start;
	min-height: 48px;
	margin: 0 auto 18px auto;
}

// ===== SPECIFIC GRID KINDS =====

.vs-grid {
	@extend .grid-game;

	// Dynamic styling will be applied via props/className modifiers
	// Bot mode styling
	&.bot-mode {
		border: 2px solid #f59e0b;

		&::before {
			content: 'VS BOT';
			position: absolute;
			top: -8px;
			left: 12px;
			background: #f59e0b;
			color: white;
			padding: 2px 8px;
			border-radius: 4px;
			font-size: 10px;
			font-weight: 700;
			text-transform: uppercase;
		}
	}

	// Multiplayer mode styling
	&.multiplayer-mode {
		border: 2px solid #10b981;

		&::before {
			content: 'VS PLAYER';
			position: absolute;
			top: -8px;
			left: 12px;
			background: #10b981;
			color: white;
			padding: 2px 8px;
			border-radius: 4px;
			font-size: 10px;
			font-weight: 700;
			text-transform: uppercase;
		}
	}
}

// Pregame lockout styling is now handled inline in UnifiedGrid

.solved-groups-display {
	@extend .grid-solved;
}

.word-grid {
	@extend .grid-game;
}

.custom-grid {
	// Custom styles can be overridden via props
	display: grid;
}

// ===== GRID CELLS =====

.grid-cell {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	min-height: 44px;
	border-radius: 8px;
	transition: all 0.2s ease;

	&.interactive {
		cursor: pointer;

		&:hover {
			transform: translateY(-1px);
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		}
	}

	&.selected {
		background: #2563eb !important;
		color: white !important;
		transform: translateY(-2px) scale(1.02);
		box-shadow: 0 4px 16px rgba(37, 99, 235, 0.3);
	}

	&.locked {
		pointer-events: none;
		user-select: none;
		cursor: not-allowed;
		opacity: 0.6;
	}

	&.wildcard {
		border: 2px solid #fbbf24;
		background: #fef3c7;
	}

	&.opponent {
		border: 2px solid #ef4444;
		background: #fee2e2;
	}

	&.solved-by-player {
		background: #dbeafe !important;
		border-color: #2563eb !important;
	}

	&.solved-by-opponent {
		background: #fee2e2 !important;
		border-color: #ef4444 !important;
	}
}

// Locked cell variant
.pregame-cell-lockout {
	pointer-events: none;
	user-select: none;
	cursor: not-allowed;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 28px;
	font-weight: 700;
	color: #64748b;
	background: #f1f5f9;
	border: 1px solid #e5e7eb;
	border-radius: 8px;
	min-height: 44px;
	width: 100%;
	text-align: center;

	span {
		font-size: 32px;
		font-weight: 800;
		line-height: 1;
		display: block;
	}
}

// ===== VS MODE OVERLAYS =====

.vsGhostOverlay {
	position: absolute;
	top: 4px;
	right: 4px;
	background: #ef4444;
	color: #fff;
	border-radius: 8px;
	font-size: 12px;
	padding: 2px 6px;
	z-index: 2;
	pointer-events: none;
}

.vsSolvedBadge {
	position: absolute;
	bottom: 4px;
	right: 4px;
	background: #2563eb;
	color: #fff;
	border-radius: 8px;
	font-size: 12px;
	padding: 2px 6px;
	z-index: 2;
	pointer-events: none;
}

.bot-indicator {
	position: absolute;
	top: 4px;
	left: 4px;
	background: #f59e0b;
	color: #fff;
	border-radius: 8px;
	font-size: 10px;
	padding: 1px 4px;
	z-index: 2;
	pointer-events: none;
}

.player-indicator {
	position: absolute;
	top: 4px;
	left: 4px;
	background: #10b981;
	color: #fff;
	border-radius: 8px;
	font-size: 10px;
	padding: 1px 4px;
	z-index: 2;
	pointer-events: none;
}

// ===== SOLVED GROUPS STYLES =====
// Modern grid-based layout

.boardContainer {
	display: flex;
	flex-direction: column;
	align-items: center;
	padding: 16px;
	background: #f5f5f5;
	border-radius: 12px;
}

.visuallyHidden {
	position: absolute;
	clip: rect(0 0 0 0);
	height: 1px;
	width: 1px;
	overflow: hidden;
}

.solvedCategories {
	display: grid;
	grid-template-columns: repeat(
		auto-fit,
		minmax(220px, 1fr)
	);
	gap: 16px;
	margin: 24px 0;
	list-style: none;
	padding: 0;
}

.categoryGroup {
	background-color: #fff;
	border-radius: 12px;
	padding: 16px;
	box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
	border: 2px solid #e0e0e0;
	animation: fadeIn 0.5s ease forwards;

	// Difficulty level colors (distinct color for each category)
	&[data-level='0'] {
		border-color: #fbbf24;
		background: linear-gradient(
			135deg,
			#fef3c7 0%,
			#fff 100%
		);

		.cardItem {
			background-color: #fef3c7;
			&:hover {
				background-color: #fde68a;
			}
		}
	}

	&[data-level='1'] {
		border-color: #10b981;
		background: linear-gradient(
			135deg,
			#d1fae5 0%,
			#fff 100%
		);

		.cardItem {
			background-color: #d1fae5;
			&:hover {
				background-color: #a7f3d0;
			}
		}
	}

	&[data-level='2'] {
		border-color: #3b82f6;
		background: linear-gradient(
			135deg,
			#dbeafe 0%,
			#fff 100%
		);

		.cardItem {
			background-color: #dbeafe;
			&:hover {
				background-color: #bfdbfe;
			}
		}
	}

	&[data-level='3'] {
		border-color: #a855f7;
		background: linear-gradient(
			135deg,
			#e9d5ff 0%,
			#fff 100%
		);

		.cardItem {
			background-color: #e9d5ff;
			&:hover {
				background-color: #ddd6fe;
			}
		}
	}
}

.categoryTitle {
	font-size: 18px;
	font-weight: 600;
	margin-bottom: 12px;
	text-align: center;
	text-transform: uppercase;
	letter-spacing: 0.5px;
	color: #1f2937;
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 8px;

	// Color-coordinated titles for each difficulty level
	.categoryGroup[data-level='0'] & {
		color: #d97706; // Amber
	}

	.categoryGroup[data-level='1'] & {
		color: #059669; // Emerald
	}

	.categoryGroup[data-level='2'] & {
		color: #2563eb; // Blue
	}

	.categoryGroup[data-level='3'] & {
		color: #7c3aed; // Violet
	}
}

.categoryTitleText {
	font-size: 18px;
	font-weight: 600;
	text-transform: uppercase;
	letter-spacing: 0.5px;
}

.playerPill {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: 4px 12px;
	border-radius: 20px;
	font-size: 12px;
	font-weight: 600;
	text-transform: none;
	letter-spacing: 0.25px;
	margin-top: 4px;
	animation: textFadeIn 0.6s ease forwards;

	// Player pill styling
	&.player {
		background-color: #2563eb;
		color: white;
		box-shadow: 0 2px 4px rgba(37, 99, 235, 0.2);
	}

	// Bot pill styling
	&.bot {
		background-color: #ef4444;
		color: white;
		box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2);
	}

	// Username pill styling (for multiplayer)
	&.username {
		background-color: #10b981;
		color: white;
		box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2);
	}

	// Alternative username pill
	&.username-alt {
		background-color: #8b5cf6;
		color: white;
		box-shadow: 0 2px 4px rgba(139, 92, 246, 0.2);
	}
}

.cardList {
	list-style: none;
	padding: 0;
	margin: 0;
}

.cardItem {
	background-color: #f0f0f0;
	margin: 6px 0;
	padding: 8px 12px;
	border-radius: 8px;
	font-size: 16px;
	text-align: center;
	transition: background 0.3s;

	&:hover {
		background-color: #e0e0e0;
	}
}

.textFadeIn {
	animation: textFadeIn 0.5s ease forwards;
}

// Legacy class names for backward compatibility
.solvedGroupsContainer {
	@extend .boardContainer;
}

.solvedCategoriesContainer {
	@extend .solvedCategories;
}

.solvedCategory {
	@extend .categoryGroup;
}

.cardListItem {
	@extend .cardItem;
}

.solved-group {
	@extend .categoryGroup;
}

.solved-label {
	@extend .categoryTitle;
}

.solved-words {
	@extend .cardList;
}

.solved-word {
	@extend .cardItem;
}

// ===== ANIMATIONS =====

@keyframes fadeIn {
	from {
		opacity: 0;
		transform: translateY(12px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes fadeInUp {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes slideIn {
	from {
		opacity: 0;
		transform: scale(0.8);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}

@keyframes textFadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

// ===== RESPONSIVE STYLES =====

@media (max-width: 768px) {
	.unifiedGrid {
		gap: 8px;
		padding: 8px;
		max-width: 100%;
	}

	.grid-cell {
		min-height: 36px;
		font-size: 14px;
	}

	.solved-groups-display {
		gap: 12px;
		padding: 0 12px;
	}
}

@media (max-width: 480px) {
	.unifiedGrid {
		gap: 6px;
		padding: 6px;
	}

	.grid-cell {
		min-height: 32px;
		font-size: 12px;
	}
}
