/**
 * Grid.module.scss - Modern Grid System with Design System
 * Handles game grids, data grids, and layout grids with proper containment
 */

@use '../../styles/Variables.scss' as *;
@use '../../styles/mixins.scss' as *;
@use '../../styles/utilities.scss' as *;

// ===== BASE GRID STYLES =====

.Grid {
	@include contained-element();
	@include grid-container();
	gap: var(--spacing-sm);
	margin: 0 auto;
	max-width: 100%;

	&.interactive {
		@include interactive-element();
	}

	&.preview {
		pointer-events: none;
	}

	&.locked {
		@include disabled-state();
	}
}

// ===== GRID VARIANTS =====

.grid-basic {
	@include card-base();
	@include contained-element();
	padding: var(--spacing-sm);
	max-width: var(--size-120); // 480px
	min-height: var(--size-80); // 320px
}

.grid-game {
	@extend .grid-basic;
}

.grid-preview {
	@extend .grid-basic;
	filter: brightness(1.05);

	.grid-cell {
		background: color-mix(
			in srgb,
			var(--color-warning) 20%,
			var(--color-background)
		) !important;
		color: var(--color-text-primary) !important;
		border-color: var(--color-warning) !important;
		box-shadow: var(--shadow-lg) !important;
		transform: translateY(-2px) scale(1.03) !important;
		z-index: var(--z-tooltip);
	}
}

.grid-locked {
	@include card-base();
	@include contained-element();
	padding: var(--spacing-sm);
	max-width: var(--size-120);
	min-height: var(--size-80);
	filter: blur(0.5px);
	background: var(--color-background-secondary);
}

.grid-solved {
	@include contained-element();
	background: transparent;
	padding: 0;
	max-width: var(--size-150); // 600px
	@include flex-wrap();
	gap: var(--spacing-md);
	justify-content: center;
	align-items: flex-start;
	min-height: var(--size-12); // 48px
	margin: 0 auto var(--spacing-md) auto;
}

// ===== SPECIFIC GRID KINDS =====

.vs-grid {
	@extend .grid-game;
	@include contained-element();

	// Bot mode styling
	&.bot-mode {
		border: var(--border-width-thick) solid
			var(--color-warning);

		&::before {
			content: 'VS BOT';
			@include badge-style();
			@include absolute-top-left(
				calc(-1 * var(--spacing-xs)),
				var(--spacing-sm)
			);
			background: var(--color-warning);
			color: white;
		}
	}

	// Multiplayer mode styling
	&.multiplayer-mode {
		border: var(--border-width-thick) solid
			var(--color-success);

		&::before {
			content: 'VS PLAYER';
			@include badge-style();
			@include absolute-top-left(
				calc(-1 * var(--spacing-xs)),
				var(--spacing-sm)
			);
			background: var(--color-success);
			color: white;
		}
	}
}

// Pregame lockout styling is now handled inline in Grid

.solved-groups-display {
	@extend .grid-solved;
}

.word-grid {
	@extend .grid-game;
}

.custom-grid {
	@include contained-element();
	display: grid;
}

// ===== GRID CELLS =====

.grid-cell {
	@include contained-element();
	@include flex-center();
	min-height: var(--size-11); // 44px
	border-radius: var(--border-radius-md);
	transition: var(--transition-all);

	&.interactive {
		@include interactive-element();
		@include hover-lift();
	}

	&.selected {
		background: var(--color-primary) !important;
		color: white !important;
		transform: translateY(-2px) scale(1.02);
		box-shadow: var(--shadow-primary);
	}

	&.locked {
		@include disabled-state();
		opacity: 0.6;
	}

	&.wildcard {
		border: var(--border-width-thick) solid
			var(--color-warning);
		background: color-mix(
			in srgb,
			var(--color-warning) 10%,
			var(--color-background)
		);
	}

	&.opponent {
		border: var(--border-width-thick) solid
			var(--color-error);
		background: color-mix(
			in srgb,
			var(--color-error) 10%,
			var(--color-background)
		);
	}

	&.solved-by-player {
		background: color-mix(
			in srgb,
			var(--color-primary) 20%,
			var(--color-background)
		) !important;
		border-color: var(--color-primary) !important;
	}

	&.solved-by-opponent {
		background: color-mix(
			in srgb,
			var(--color-error) 20%,
			var(--color-background)
		) !important;
		border-color: var(--color-error) !important;
	}
}

// Locked cell variant
.pregame-cell-lockout {
	@include disabled-state();
	@include flex-center();
	@include text-heading-xl();
	color: var(--color-text-tertiary);
	background: var(--color-background-secondary);
	border: var(--border-width) solid var(--color-border);
	border-radius: var(--border-radius-md);
	min-height: var(--size-11); // 44px
	width: 100%;
	text-align: center;

	span {
		@include text-heading-2xl();
		font-weight: var(--font-weight-bold);
		line-height: 1;
		display: block;
	}
}

// ===== VS MODE OVERLAYS =====

.vsGhostOverlay {
	@include badge-overlay();
	@include absolute-top-right(
		var(--spacing-xs),
		var(--spacing-xs)
	);
	background: var(--color-error);
	color: white;
}

.vsSolvedBadge {
	@include badge-overlay();
	@include absolute-bottom-right(
		var(--spacing-xs),
		var(--spacing-xs)
	);
	background: var(--color-primary);
	color: white;
}

.bot-indicator {
	@include badge-overlay();
	@include absolute-top-left(
		var(--spacing-xs),
		var(--spacing-xs)
	);
	background: var(--color-warning);
	color: white;
	font-size: var(--font-size-xs);
}

.player-indicator {
	@include badge-overlay();
	@include absolute-top-left(
		var(--spacing-xs),
		var(--spacing-xs)
	);
	background: var(--color-success);
	color: white;
	font-size: var(--font-size-xs);
}

// ===== SOLVED GROUPS STYLES =====
// Modern grid-based layout

.boardContainer {
	@include flex-column();
	align-items: center;
	padding: var(--spacing-md);
	background: var(--color-background-secondary);
	border-radius: var(--border-radius-lg);
	@include contained-element();
}

.visuallyHidden {
	@include sr-only();
}

.solvedCategories {
	@include contained-element();
	display: grid;
	grid-template-columns: repeat(
		auto-fit,
		minmax(var(--size-55), 1fr)
	); // 220px
	gap: var(--spacing-md);
	margin: var(--spacing-xl) 0;
	list-style: none;
	padding: 0;
	max-width: 100%;
}

.categoryGroup {
	@include card-base();
	@include contained-element();
	padding: var(--spacing-md);
	border: var(--border-width-thick) solid
		var(--color-border);
	animation: slide-up var(--transition-duration-slow) ease
		forwards;

	// Difficulty level colors using design system
	&[data-level='0'] {
		border-color: var(--color-warning);
		background: linear-gradient(
			135deg,
			color-mix(
					in srgb,
					var(--color-warning) 15%,
					var(--color-background)
				)
				0%,
			var(--color-background) 100%
		);

		.cardItem {
			background-color: color-mix(
				in srgb,
				var(--color-warning) 15%,
				var(--color-background)
			);
			&:hover {
				background-color: color-mix(
					in srgb,
					var(--color-warning) 25%,
					var(--color-background)
				);
			}
		}
	}

	&[data-level='1'] {
		border-color: var(--color-success);
		background: linear-gradient(
			135deg,
			color-mix(
					in srgb,
					var(--color-success) 15%,
					var(--color-background)
				)
				0%,
			var(--color-background) 100%
		);

		.cardItem {
			background-color: color-mix(
				in srgb,
				var(--color-success) 15%,
				var(--color-background)
			);
			&:hover {
				background-color: color-mix(
					in srgb,
					var(--color-success) 25%,
					var(--color-background)
				);
			}
		}
	}

	&[data-level='2'] {
		border-color: var(--color-primary);
		background: linear-gradient(
			135deg,
			color-mix(
					in srgb,
					var(--color-primary) 15%,
					var(--color-background)
				)
				0%,
			var(--color-background) 100%
		);

		.cardItem {
			background-color: color-mix(
				in srgb,
				var(--color-primary) 15%,
				var(--color-background)
			);
			&:hover {
				background-color: color-mix(
					in srgb,
					var(--color-primary) 25%,
					var(--color-background)
				);
			}
		}
	}

	&[data-level='3'] {
		border-color: var(--color-secondary);
		background: linear-gradient(
			135deg,
			color-mix(
					in srgb,
					var(--color-secondary) 15%,
					var(--color-background)
				)
				0%,
			var(--color-background) 100%
		);

		.cardItem {
			background-color: color-mix(
				in srgb,
				var(--color-secondary) 15%,
				var(--color-background)
			);
			&:hover {
				background-color: color-mix(
					in srgb,
					var(--color-secondary) 25%,
					var(--color-background)
				);
			}
		}
	}
}

.categoryTitle {
	@include text-heading-lg();
	@include flex-column();
	align-items: center;
	gap: var(--spacing-xs);
	margin-bottom: var(--spacing-sm);
	text-align: center;
	text-transform: uppercase;
	letter-spacing: 0.025em;
	color: var(--color-text-primary);

	// Color-coordinated titles for each difficulty level
	.categoryGroup[data-level='0'] & {
		color: var(--color-warning-dark);
	}

	.categoryGroup[data-level='1'] & {
		color: var(--color-success-dark);
	}

	.categoryGroup[data-level='2'] & {
		color: var(--color-primary-dark);
	}

	.categoryGroup[data-level='3'] & {
		color: var(--color-secondary-dark);
	}
}

.categoryTitleText {
	@include text-heading-lg();
	text-transform: uppercase;
	letter-spacing: 0.025em;
}

.playerPill {
	@include flex-center();
	@include pill-style();
	@include text-caption();
	font-weight: var(--font-weight-semibold);
	text-transform: none;
	letter-spacing: 0.01em;
	margin-top: var(--spacing-xs);
	animation: fade-in var(--transition-duration-normal) ease
		forwards;

	// Player pill styling
	&.player {
		@include pill-primary();
	}

	// Bot pill styling
	&.bot {
		@include pill-error();
	}

	// Username pill styling (for multiplayer)
	&.username {
		@include pill-success();
	}

	// Alternative username pill
	&.username-alt {
		@include pill-secondary();
	}
}

.cardList {
	list-style: none;
	padding: 0;
	margin: 0;
}

.cardItem {
	@include contained-element();
	background-color: var(--color-background-tertiary);
	margin: var(--spacing-xs) 0;
	padding: var(--spacing-xs) var(--spacing-sm);
	border-radius: var(--border-radius-md);
	@include text-body-base();
	text-align: center;
	transition: var(--transition-colors);

	&:hover {
		background-color: var(--color-background-secondary);
	}
}

.textFadeIn {
	animation: fade-in var(--transition-duration-slow) ease
		forwards;
}

// Legacy class names for backward compatibility
.solvedGroupsContainer {
	@extend .boardContainer;
}

.solvedCategoriesContainer {
	@extend .solvedCategories;
}

.solvedCategory {
	@extend .categoryGroup;
}

.cardListItem {
	@extend .cardItem;
}

.solved-group {
	@extend .categoryGroup;
}

.solved-label {
	@extend .categoryTitle;
}

.solved-words {
	@extend .cardList;
}

.solved-word {
	@extend .cardItem;
}

// ===== RESPONSIVE STYLES =====

@include media-tablet-down {
	.Grid {
		gap: var(--spacing-xs);
		padding: var(--spacing-xs);
		max-width: 100%;
	}

	.grid-cell {
		min-height: var(--size-9); // 36px
		@include text-body-sm();
	}

	.solved-groups-display {
		gap: var(--spacing-sm);
		padding: 0 var(--spacing-sm);
	}

	.solvedCategories {
		grid-template-columns: 1fr;
		gap: var(--spacing-sm);
	}
}

@include media-mobile-down {
	.Grid {
		gap: var(--spacing-xs);
		padding: var(--spacing-xs);
	}

	.grid-cell {
		min-height: var(--size-8); // 32px
		@include text-body-sm();
	}
}
